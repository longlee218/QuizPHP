#Table Users
#user_type { "1"; "Instructor", "2": "Student" }
#gender {"1": "Male", "0": "Female", "2": Unknow}
create table Users(
                      id int not null auto_increment primary key ,
                      username varchar(125) not null,
                      first_name varchar(255) not null,
                      last_name varchar(255) not null,
                      email varchar(255) not null,
                      gender int(1) default 2,
                      date_join timestamp default current_timestamp,
                      update_at timestamp default current_timestamp on update current_timestamp,
                      user_type enum('1','2') default '2',
                      country varchar(10) not null ,
                      school_name varchar(255) null ,
                      class_name varchar(255) null,
                      organization_type int(1) null ,
                      organization_name varchar(255) null,
                      position varchar(255) null,
                      password varchar(255),
                      city varchar(255) null
);

# Table Room
# status {"0":"offline", "1":"Online"}
create table Room(
                     id int not null auto_increment primary key ,
                     room_name varchar(255) not null ,
                     status enum('0','1') default '0',
                     create_at timestamp default current_timestamp,
                     update_at timestamp default current_timestamp on update current_timestamp,
                     time_start timestamp null ,
                     time_end timestamp null ,
                     password varchar(255) null ,
                     users_id int,
                     constraint fk_users_id foreign key (users_id) references Users(id)
);

#Table Thread
create table Thread(
                       id int not null auto_increment primary key ,
                       title varchar(255) not null ,
                       subject varchar(255) null ,
                       grade varchar(255),
                       create_at timestamp default current_timestamp,
                       update_at timestamp default current_timestamp on update current_timestamp,
                       is_test enum('0','1') default '0',
                       user_id int,
                       flag_delete enum('0','1') default '0',
                       constraint fk_quiz_user_id foreign key (user_id) references Users(id)
);

#Table Room_thread
create table Room_thread(
    id int not null auto_increment primary key ,
    thread_id int,
    room_id int,
    constraint fk_m2m_thread_id foreign key (thread_id) references Thread(id),
    constraint fk_m2m_room_id foreign key (room_id) references Room(id)
);

#Table Question
create table Question(
                         id int not null auto_increment primary key ,
                         `explain` varchar(255) null ,
                         image varchar(255) null ,
                         description text,
                         thread_id int,
                         constraint fk_thread_id foreign key (thread_id) references Thread(id)
);

#Table Answer
create table Choices(
                        id int not null  auto_increment primary key ,
                        choice_name varchar(255) not null ,
                        choice_content varchar(255) not null ,
                        correct enum('0', '1') default '0',
                        question_id int,
                        constraint fk_question_id foreign key (question_id) references Question(id)
);
#Table Result
create table Result(
                       id int not null auto_increment primary key ,
                       score varchar(255),
                       start_at timestamp null ,
                       finish_at timestamp null ,
                       update_at timestamp null
);


#Table Result Detail
create table ResultDetail(
                             id int not null auto_increment primary key ,
                             users_id int,
                             question_id int,
                             answer varchar(255) null,
                             correct boolean,
                             result_id int,
                             constraint fk_users_detail_id foreign key (users_id) references Users(id),
                             constraint fk_question_detail_id foreign key (question_id) references Question(id),
                             constraint fk_result_id foreign key(result_id) references Result(id)
);


alter table question
    modify column image longtext;

alter table question
    add image_name longtext;


alter table room
               add description longtext null

alter table thread
               add description longtext null